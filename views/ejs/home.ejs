<!DOCTYPE html>
<html>
    <%- include('../include/head'); -%>
    <body class="content-see">
      <button type="button" onclick="window.location.href='/logout'" class="btn btn-primary" data-toggle="button" aria-pressed="false" autocomplete="off">Logout</button>
      <form method="POST" enctype="multipart/form-data">
        <div class="input-group">
          <div class="custom-file">
            <!--<input type="file"  class="custom-file-input form-control" id="inputGroupFile01"
              aria-describedby="inputGroupFileAddon01" name="filetoupload">
            <input type="file" accept="image/*;capture=camera">-->
	          <input type="file" accept="image/*" capture class="custom-file-input form-control" id="inputGroupFile01"
              aria-describedby="inputGroupFileAddon01" name="filetoupload">
            <label class="custom-file-label" for="inputGroupFile01">Choose file</label>
          </div>
          <div class="input-group-append">
            <button class="btn btn-primary" id="inputGroupFileAddon01">Upload</button>
          </div>
        </div>
      </form>
      <form action="/find" method="POST" enctype="multipart/form-data" id="findfile">
          <input type="search" name="find" id="find" onkeyup="supero(this)" onkeypress="supero(this)">
      </form>
      <div id="maska"></div>
      <script>
        const supero = (this) => {
            find(this)
        }
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function() {
          'use strict';
          window.addEventListener('load', function() {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function(form) {
              form.addEventListener('submit', function(event) {
                if (form.checkValidity() === false) {
                  event.preventDefault();
                  event.stopPropagation();
                }
                form.classList.add('was-validated');
              }, false);
            });
          }, false);
        })();
      </script>
      <video id="player" autoplay></video>
      <button id="capture">Capture</button>
      <canvas id="canvas" width=320 height=240></canvas>
      <script>
        const player = document.getElementById('player');
        const canvas = document.getElementById('canvas');
        const context = canvas.getContext('2d');
        const captureButton = document.getElementById('capture');

        const constraints = {
          video: true,
        };

        captureButton.addEventListener('click', () => {
          // Draw the video frame to the canvas.
          context.drawImage(player, 0, 0, canvas.width, canvas.height);
        });

        // Attach the video stream to the video element and autoplay.
        navigator.mediaDevices.getUserMedia(constraints)
          .then((stream) => {
            player.srcObject = stream;
          });
      </script>
      <link rel="stylesheet" href="/css/style.min.css">
    </body>
</html>