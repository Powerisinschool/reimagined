$((function(){var FADE_TIME=150,TYPING_TIMER_LENGTH=400;$("#sendbtn").click((function(event){event.preventDefault(),sendMessage(),socket.emit("stop typing"),typing=!1}));var window=$(window),$messages=$("#chatcon"),$inputMessage=$("#chat-id-1-input"),username=$("#username").val(),recipient=$("#uniqueid").val(),recipientNames=$("#recnames").val(),connected=!0,typing=!1,currentInput=$inputMessage.focus(),socket=io();socket.on("rec message",(function(msg){}));var $currentMessages={};const alertUserError=function(msg){$("#modalBody").text(msg),$("#errorModal").modal("show")};socket.emit("get messages",{recipient:recipient,username:username}),socket.on("messages parse",response=>{for($messages.html(""),i=0;i<response.length;i++){console.log(response[i]);var repose=response[i];$currentMessages[repose.id]=!0,repose.sender===username?addChatMessage({username:username,message:repose.message}):addRecMessage({username:username,message:repose.message,id:repose.id})}document.querySelector(".end-of-chat")&&document.querySelector(".end-of-chat").scrollIntoView()}),socket.on("error",err=>{alertUserError(err+"! Please reload the page to fix the problem")});const getNewMessages=function(){socket.emit("req new messages",{recipient:recipient,username:username})},sendMessage=()=>{var message=$inputMessage.val();console.log("Enter was pressed"),console.log(message),message&&(console.log("Mehn!"),$inputMessage.text(""),addChatMessage({username:username,message:message}),document.querySelector(".end-of-chat")&&document.querySelector(".end-of-chat").scrollIntoView(),socket.emit("chat message",{username:$("#username").val(),recipient:$("#uniqueid").val(),message:$("#chat-id-1-input").val()}),$("#chat-id-1-input").val(""))},addChatMessage=data=>{var options=options||{};options.fade=!1;var $messageBodyDiv=$('<div class="message-body">').html(`\n            <div class="message-row">\n                <div class="d-flex align-items-center justify-content-end">\n                    \x3c!-- Message: dropdown --\x3e\n                    <div class="dropdown">\n                        <a class="text-muted opacity-60 mr-3" href="#" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n                            <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-three-dots-vertical" fill="currentColor" xmlns="http://www.w3.org/2000/svg">\n                                <path fill-rule="evenodd" d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>\n                            </svg>\n                        </a>\n\n                        <div class="dropdown-menu" style="">\n                            <a class="dropdown-item d-flex align-items-center" href="#">\n                                Edit <span class="ml-auto fe-edit-3"></span>\n                            </a>\n                            <a class="dropdown-item d-flex align-items-center" href="#">\n                                Share <span class="ml-auto fe-share-2"></span>\n                            </a>\n                            <a class="dropdown-item d-flex align-items-center" href="#">\n                                Delete <span class="ml-auto fe-trash-2"></span>\n                            </a>\n                        </div>\n                    </div>\n                    \x3c!-- Message: dropdown --\x3e\n                    \x3c!-- Message: content --\x3e\n                    <div class="message-content bg-primary text-white">\n                        <div>${cleanInput(data.message)}</div>\n\n                        <div class="mt-1">\n                            <small class="opacity-65">Me</small>\n                        </div>\n                    </div>\n                    \x3c!-- Message: content --\x3e\n                </div>\n            </div>\n        `),typingClass=data.typing?"typing":"",$messageDiv=$('<div class="message message-right">').append($messageBodyDiv);addMessageElement($messageDiv,options)},addRecMessage=data=>{var noRepetition;if(!$(`#${data.id}`).val()){var options=options||{};options.fade=!1;var $messageBodyDiv=$('<div class="message-body">').html(`\n                <div class="message-row">\n                    <div class="d-flex align-items-center">\n                        \x3c!-- Message: content --\x3e\n                        <div class="message-content bg-light">\n                            <h6 class="mb-2">${recipientNames}</h6>\n                            <div>${cleanInput(data.message)}</div>\n\n                            <div class="mt-1">\n                                <small class="opacity-65">Secured</small>\n                            </div>\n                        </div>\n                        \x3c!-- Message: content --\x3e\n                        <input style="display: none;" value="${cleanInput(data.message)}" id="${data.id}">\n                        \x3c!-- Message: dropdown --\x3e\n                        <div class="dropdown">\n                            <a class="text-muted opacity-60 ml-3" href="#" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n                                <svg width="1em" height="1em" viewBox="0 0 16 16" class="icon-md bi bi-three-dots-vertical" fill="currentColor" xmlns="http://www.w3.org/2000/svg">\n                                    <path fill-rule="evenodd" d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>\n                                </svg>\n                            </a>\n\n                            <div class="dropdown-menu" style="">\n                                <a class="dropdown-item d-flex align-items-center" href="#">\n                                    Edit <span class="ml-auto fe-edit-3"></span>\n                                </a>\n                                <a class="dropdown-item d-flex align-items-center" href="#">\n                                    Share <span class="ml-auto fe-share-2"></span>\n                                </a>\n                                <a class="dropdown-item d-flex align-items-center" href="#">\n                                    Delete <span class="ml-auto fe-trash-2"></span>\n                                </a>\n                            </div>\n                        </div>\n                        \x3c!-- Message: dropdown --\x3e\n                    </div>\n                </div>\n            `),typingClass=data.typing?"typing":"",$messageDiv=$('<div class="message">').append($messageBodyDiv);addMessageElement($messageDiv,options)}},addMessageElement=(el,options)=>{var $el=$(el);options||(options={}),void 0===options.fade&&(options.fade=!0),void 0===options.prepend&&(options.prepend=!1),options.fade&&$el.hide().fadeIn(150),options.prepend?$messages.prepend($el):$messages.append($el),$messages[0].scrollTop=$messages[0].scrollHeight,document.querySelector(".end-of-chat")&&document.querySelector(".end-of-chat").scrollIntoView()},cleanInput=input=>$("<div/>").text(input).html(),updateTyping=()=>{typing||(typing=!0,socket.emit("typing")),lastTypingTime=(new Date).getTime(),setTimeout(()=>{var typingTimer,timeDiff;(new Date).getTime()-lastTypingTime>=400&&typing&&(socket.emit("stop typing"),typing=!1)},400)};$inputMessage.keypress((function(event){event.ctrlKey||event.metaKey||event.altKey||currentInput.focus(),13===event.which&&(event.preventDefault(),sendMessage(),socket.emit("stop typing"),typing=!1)})),$inputMessage.on("input",()=>{updateTyping()}),socket.on("new message",response=>{for(i=0;i<response.length;i++){console.log(response[i]);var repose=response[i],noRepetition;if($currentMessages[repose.id]=!0,repose.sender!==username)$(`#${repose.id}`).val()||addRecMessage({username:username,message:repose.message,id:repose.id})}});const userOnline=()=>{$("#onlinetext").text("Online").addClass("user-select-none"),$("#onlinedot").addClass("d-block"),$("#onlinedot").addClass("d-inline-block"),$("#recnames").addClass("mb-n1"),$("#reconlinein").addClass("avatar-online")},userOffline=ha=>{var lastseen=moment(ha).fromNow();$("#onlinetext").text(`Last Seen ${lastseen.toString()}`).addClass("user-select-none"),$("#onlinedot").addClass("d-none"),$("#onlinedot").removeClass("d-inline-block"),$("#recnames").removeClass("mb-n1"),$("#reconlinein").removeClass("avatar-online")};socket.on("online indicator",results=>{switch(results.online){case"Y":userOnline();break;default:userOffline(results.lastseen)}}),setInterval(getNewMessages,2e3),setInterval(()=>{socket.emit("get activity",{recipient:recipient})},2e3)}));